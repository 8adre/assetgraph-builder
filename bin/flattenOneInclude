#!/usr/bin/env node

var fs = require('fs'),
    _ = require('underscore'),
    AssetGraph = require('assetgraph'),
    transforms = require('../lib/transforms'),
    urlTools = require('assetgraph/lib/util/urlTools'),
    commandLineOptions = require('optimist').
        usage('$0 [--label <labelName>=<dir> ...] [--root <dir>] [-o <outputJavaScriptFile>] <inputJavaScriptFile>').
        check(function (argv) {
            if (argv._.length !== 1 || !/\.js$/.test(argv._[0])) {
                throw "Please specify a single JavaScript file on the command line";
            }
        }).
        argv;

new AssetGraph({root: commandLineOptions.root}).on('error', function (err) {
    console.error(err.stack);
    process.exit(1);
}).queue(
    transforms.registerLabelsAsCustomProtocols(commandLineOptions.label),
    transforms.loadAssets(commandLineOptions._.map(urlTools.fsFilePathToFileUrl)),
    transforms.populate({followRelations: {type: 'JavaScriptOneInclude'}}),
    function (assetGraph) {
        assetGraph.findAssets({isInitial: true}).forEach(function (initialAsset) {
            var texts = [];
            assetGraph.collectAssetsPostOrder(initialAsset, {to: {type: 'JavaScript'}}).forEach(function (asset) {
                assetGraph.findRelations({from: asset}).forEach(function (outgoingRelation) {
                    outgoingRelation.detach();
                });
                texts.push(asset.text);
            });
            var flattenedText = texts.join("\n").replace(/one\.include\(([^\)]*)\);?\n?/g, "");
            if ('o' in commandLineOptions) {
                fs.writeFileSync(commandLineOptions.o, flattenedText, AssetGraph.assets.JavaScript.prototype.encoding);
            } else {
                console.log(flattenedText);
            }
        });
    }
).run();
