#!/usr/bin/env node

var _ = require('underscore'),
    AssetGraph = require('assetgraph'),
    query = AssetGraph.query,
    urlTools = require('assetgraph/lib/util/urlTools'),
    commandLineOptions = require('optimist').
        usage('$0 --root <inputRootDirectory> <htmlFile>...').
        demand('root').
        argv;

require('../lib/registerTransforms');

new AssetGraph({root: commandLineOptions.root})
    .on('afterTransform', function (transform, elapsedTime) {
        console.log((elapsedTime / 1000).toFixed(3) + " secs: " + transform.name);
    })
    .on('error', function (err) {
        console.error(err.stack);
        process.exit(1);
    })
    .loadAssets(commandLineOptions._.map(urlTools.fsFilePathToFileUrl))
    .populate({
        followRelations: {type: ['HtmlStyle', 'CssImport', 'CssImage', 'CssAlphaImageLoader'], to: {url: query.not(/^https?:/)}}
    })
    .writeStatsToStderr()
    .optimizePngs()
    .writeAssetsToDisc({url: /^file:/, isImage: true})
    .writeStatsToStderr()
    .run();
