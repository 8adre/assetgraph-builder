#!/usr/bin/env node

var _ = require('underscore'),
    AssetGraph = require('assetgraph'),
    query = AssetGraph.query,
    i18nTools = require('../lib/i18nTools'),
    urlTools = require('assetgraph/lib/util/urlTools'),
    commandLineOptions = require('optimist')
        .usage('$0 --root <inputRootDirectory> [--label <labelName>=<dir> ...] [--parentdir] [--locales <localeId>,...] [--defaultlocale <localeId>] [--localecookiename <cookieName>] [--cssimports] [--inline <wildCard>] [--watch] [--version <versionTag>] <htmlFile> ...')
        .boolean('cssimports', 'parentdir')
        .demand(['root'])
        .argv;

require('../lib/registerTransforms');

new AssetGraph({root: commandLineOptions.root})
    .on('afterTransform', function (transform, elapsedTime) {
        console.log((elapsedTime / 1000).toFixed(3) + " secs: " + transform.name);
    })
    .on('warn', function (err) {
        // These are way too noisy
        if (err.relationType !== 'JavaScriptCommonJsRequire') {
            console.warn((err.asset ? err.asset.urlOrDescription + ': ' : '') + err.message);
            if (commandLineOptions.stoponwarning) {
                process.exit(1);
            }
        }
    })
    .on('error', function (err) {
        console.error((err.asset ? err.asset.urlOrDescription + ': ' : '') + err.stack);
        process.exit(1);
    })
    .if(commandLineOptions.watch)
        .startOverIfAssetSourceFilesChange()
    .endif()
    .registerRequireJsConfig()
    .registerLabelsAsCustomProtocols(commandLineOptions.label, {installFindParentDirectoryAsDefault: commandLineOptions.parentdir})
    .loadAssets(commandLineOptions._.map(urlTools.fsFilePathToFileUrl))
    .buildDevelopment({
        version: commandLineOptions.version,
        supportedLocaleIds: commandLineOptions.locales && _.flatten(_.flatten([commandLineOptions.locales]).map(function (localeId) {
            return localeId.split(",");
        })).map(i18nTools.normalizeLocaleId),
        defaultLocaleId: commandLineOptions.defaultlocaleid && i18nTools.normalizeLocaleId(commandLineOptions.defaultlocaleid),
        localeCookieName: commandLineOptions.localeCookieName,
        cssImports: commandLineOptions.cssimports,
        inlineUrlWildCard: commandLineOptions.inline
    })
    .writeAssetsToDisc({isInitial: true})
    .run();
